/**
 * Copyright (C)  2011-2011  Jesse Meng (pingf0@gmail.com).
 *
 * This file is part of OOC-GCC.
 *
 * OOC-GCC is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * OOC-GCC is distributed in the hope that it will be useful,but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see
 * <http://www.gnu.org/licenses/>.
 */

#pragma once
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stddef.h>
#include "OOCfg.h"
#include "OOBase.h"
#include "OOBase2.h"

//class&static design
#define CLASS_ROOT_HEAD __OOC_CLASS__ROOT_HEAD
#define CLASS_RAW __OOC_CLASS__RAW_DESIGN
#define CLASS_RAW_EX __OOC_CLASS__RAW_EXTENDS
#define CLASS_ROOT __OOC_CLASS__ROOTED_DESIGN
#define CLASS_ROOT_EX __OOC_CLASS__ROOTED_AND_EXTENDED_DESIGN
#define CLASS_EX __OOC_CLASS__EXTENDED_DESIGN

#define STATIC_LINK __OOC_CLASS__STATIC_LINK

#define STATIC_ROOT_HEAD __OOC_STATIC__ROOT_HEAD
#define STATIC_RAW __OOC_STATIC__RAW_DESIGN
#define STATIC_RAW_EX __OOC_STATIC__RAW_EXTENDS
#define STATIC_ROOT_EX __OOC_STATIC__ROOTED_AND_EXTENDED_DESIGN
#define STATIC_ROOT __OOC_STATIC__ROOTED_DESIGN
#define STATIC_EX __OOC_STATIC__EXTENDED_DESIGN

//
#define NO_STATIC __OOC_CLASS__NO_STATIC

#define CLASS CLASS_ROOT
#define STATIC STATIC_ROOT

//assemble
#define ASM_C0 __OOC_ASSEMBLE__C0
#define ASM_S0 __OOC_ASSEMBLE__S0
#define ASM_C1 __OOC_ASSEMBLE__C1
#define ASM_S1 __OOC_ASSEMBLE__S1

#define ASM_00 __OOC_ASSEMBLE__00
#define ASM_01 __OOC_ASSEMBLE__01
#define ASM_10 __OOC_ASSEMBLE__10
#define ASM_11 __OOC_ASSEMBLE__11

#define ASM_XY __OOC_ASSEMBLE__XY

#define ASM ASM_00
#define ASM_EX ASM_11

//static part link

#define ST __OOC_CLASS__REAL_STATIC
#define STT __OOC_CLASS__TYPE_STATIC

//multi extends after 0.12


#define CLASS_SU_INI __OOC_CLASS__SUPER_INI
#define CLASS_SU_FIN __OOC_CLASS__SUPER_FIN
#define CLASS_SU_INI0(pointer,SuType) __OOC_CLASS__SUPER_INI(pointer,SuType,NULL)
#define CLASS_SU_FIN0(pointer,SuType) __OOC_CLASS__SUPER_FIN(pointer,SuType,NULL)

#define STATIC_SU_INI __OOC_STATIC__SUPER_INI
#define STATIC_SU_FIN __OOC_STATIC__SUPER_FIN
#define STATIC_SU_INI0(pointer,SuType) __OOC_STATIC__SUPER_INI(pointer,SuType,NULL)
#define STATIC_SU_FIN0(pointer,SuType) __OOC_STATIC__SUPER_FIN(pointer,SuType,NULL)
//basic functions
#define INI __OOC_FUNCTION__INI
#define FIN __OOC_FUNCTION__FIN
#define NEW __OOC_FUNCTION__NEW
#define DEL __OOC_FUNCTION__DEL
#define DELETE __OOC_FUNCTION__DELETE

#define INI0(pointer,Type) INI(pointer,Type,NULL)
#define FIN0(pointer,Type) FIN(pointer,Type,NULL)
#define NEW0(Type) NEW(Type,NULL)
#define DEL0(pointer,Type) DEL(pointer,Type,NULL)
#define DELETE0(pointer) DELETE(pointer,NULL)
//
#define NEW_EX __OOC_FUNCTION__NEW_EX
#define DEL_EX __OOC_FUNCTION__DEL_EX
#define DELETE_EX __OOC_FUNCTION__DELETE_EX

#define NEW_EX0(Type,num,function)   NEW_EX(Type,num,function,NULL)
#define DEL_EX0(pointer,Type,function)  DEL_EX0(pointer,Type,function,NULL)
#define DELETE_EX0(pointer,function)  DELETE_EX0(pointer,function,NULL)
//
#define CONNECT_METHOD __OOC_FUNCTION__CONNECT_METHOD
#define CONNECT_FUNC __OOC_FUNCTION__CONNECT_FUNCTION
//
#define CALL __OOC_FUNCTION__FUNCTION_CALL
#define CALL0 __OOC_FUNCTION__FUNCTION_CALL_WITHOUT_PARAMETERS
//
#define METHOD __OOC_FUNCTION__METHOD_DEFINE
#define METHOD0 __OOC_FUNCTION__METHOD_DEFINE_WITHOUT_PARAMETERS
//running method
#define RUN __OOC_FUNCTION__METHOD_RUN
#define RUN0 __OOC_FUNCTION__METHOD_RUN_WITHOUT_PARAMETERS

//memory function
#define RESET_MF __OOC_FUNCTION__RESET_MEMORY_FUNCTIONS
#define ALLOC __OOC_FUNCTION__ALLOC
#define FREE __OOC_FUNCTION__FREE
#define REALLOC __OOC_FUNCTION__REALLOC

//block
#define CC_BEGIN __OOC_BLOCK__EXTERN_C_BEGIN
#define CC_END __OOC_BLOCK__EXTERN_C_END

//param
#define THIS __OOC_THIS
#define PARAM __OOC_PARAMETER
#define PP __OOC_FUNCTION__PACK_PARAMETER
#define VA_CNT __OOC_FUNCTION__VARIABLE_ARGUMENTS_COUNT

//value
#define RE_LIMIT __OOC_VALUE__RETURN_ERROR_LIMIT
#define TRUE __OOC_VALUE__TRUE
#define FALSE __OOC_VALUE__FALSE
#define OK __OOC_VALUE__OK
#define FAIL __OOC_VALUE__FAIL

//assert&exception
#define ASSERT __OOC_FUNCTION__ASSERT
#define CHECK __OOC_FUNCTION__CHECK
#define THROW __OOC_FUNCTION__THROW
#define TRY __OOC_FUNCTION__TRY
#define CATCH __OOC_FUNCTION__CATCH
#define ELSE_CATCH __OOC_FUNCTION__ELSE_CATCH
#define CATCH_ELSE __OOC_FUNCTION__CATCH_ELSE
#define FINALLY __OOC_FUNCTION__FINALLY
#define END_TRY __OOC_FUNCTION__END_TRY
#define THROW0(e) \
	__OOC_FUNCTION__TRY \
		__OOC_FUNCTION__THROW(e) \
	__OOC_FUNCTION__END_TRY

#define SET_EXCEPTIONS __OOC_FUNCTION__SET_EXCEPTIONS
#define GET_EXCEPTIONS __OOC_FUNCTION__GET_EXCEPTIONS
#define SET_EXCEPTION __OOC_FUNCTION__SET_EXCEPTION
#define GET_EXCEPTION __OOC_FUNCTION__GET_EXCEPTION
//
#define SWAP __OOC_FUNCTION__SWAP



#include "OOStdEx.h"



