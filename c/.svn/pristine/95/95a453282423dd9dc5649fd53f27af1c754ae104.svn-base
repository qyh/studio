/*
 *
 * Professional Linux Programming - get employee info
 *
 */
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include "libpq-fe.h"

int main(int argc, char **argv)
{
   const char *conninfo;
   PGconn *conn;
   PGresult *result;
   char *paramValues[1];
   const char *query;
   char empid[4];
   char *lastname, *firstname, *salary;
   float salaryval;

   conninfo = "hostaddr = 127.0.0.1 dbname = test user = earl password = bigshot";
   conn = PQconnectdb(conninfo);
   if (PQstatus(conn) != CONNECTION_OK)
   {
      printf("Unable to establish connection: %s", PQerrorMessage(conn));
      return 1;
   } else
   {
      query = "SELECT * from employee where empid = $1";
      while(1)
      {
         printf("\nEnter employee id: ");
         scanf("%3s", &empid);
         if (!strcmp(empid,"0"))
            break;

         paramValues[0] = (char *)empid;
         result = PQexecParams(conn, query, 1, NULL,
                        (const char * const *)paramValues, NULL, NULL, 0);
         if (PQresultStatus(result) != PGRES_TUPLES_OK)
         {
            printf("Problem: %s", PQerrorMessage(conn));
            PQclear(result);
            PQfinish(conn);
            return 1;
         } else
         {
            if (PQntuples(result) > 0)
            {
               lastname = PQgetvalue(result, 0, 1);
               firstname = PQgetvalue(result, 0, 2);
               salary = PQgetvalue(result, 0, 3);
               salaryval = atof(salary);
               printf(" Employee ID: %s\n", empid);
               printf(" Name: %s,%s\n", lastname, firstname);
               printf(" Salary: $%.2lf\n", salaryval);
               PQclear(result);
            } else
               printf(" Employee ID not found\n");
         }
      }
         
   }

   PQfinish(conn);
   return 0;
}
