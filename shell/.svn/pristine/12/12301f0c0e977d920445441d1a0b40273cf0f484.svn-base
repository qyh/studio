

  Listing 11.6




include/scsi/scsi_host.h:
struct Scsi_Host {
    /* ... */
    void *shost_data;
+   char snam[8]; /* /dev node name for this disk */
    /* ... */
};

drivers/usb/storage/usb.h:
struct us_data {
    /* ... */
+   char magic[4];
};

include/linux/usb.h:
struct usb_interface {
    /* ... */
+   void *private_data;
};

drivers/usb/storage/usb.c:
static int storage_probe(struct usb_interface *intf,
                         const struct usb_device_id *id)
{
    /* ... */
    memset(us, 0, sizeof(struct us_data));
+   intf-&gt;private_data = (void *) us;
+   strncpy(us-&gt;magic, &quot;disk&quot;, 4);
    mutex_init(&amp;(us-&gt;dev_mutex));
    /* ... */
}

drivers/scsi/sd.c:
static int sd_probe(struct device *dev)
{
    /* ... */
    add_disk(gd);
+   memset(sdp-&gt;host-&gt;snam,0, sizeof(sdp-&gt;host-&gt;snam));
+   strncpy(sdp-&gt;host-&gt;snam, gd-&gt;disk_name, 3);
    sdev_printk(KERN_NOTICE, sdp, &quot;Attached scsi %sdisk %s\n&quot;,
                sdp-&gt;removable ? &quot;removable &quot; : &quot;&quot;, gd-&gt;disk_name);
    /* ... */
}

drivers/scsi/sr.c:
static int sr_probe(struct device *dev)
{
    /* ... */
    add_disk(disk);
+   memset(sdev-&gt;host-&gt;snam,0, sizeof(sdev-&gt;host-&gt;snam));
+   strncpy(sdev-&gt;host-&gt;snam, cd-&gt;cdi.name, 3);
    sdev_printk(KERN_DEBUG, sdev, &quot;Attached scsi CD-ROM %s\n&quot;,
                cd-&gt;cdi.name);
    /* ... */
}

drivers/usb/core/devices.c:
/* ... */
#include &lt;asm/uaccess.h&gt;
+ #include &lt;scsi/scsi_host.h&gt;
+ #include &quot;../storage/usb.h&quot;

static ssize_t usb_device_dump(char __user **buffer, size_t *nbytes,
                               loff_t *skip_bytes, loff_t *file_offset,
                               struct usb_device *usbdev,
                               struct usb_bus *bus, int level,
                               int index, int count)
{
    /* ... */
    ssize_t total_written = 0;
+   struct us_data *us_d;
+   struct Scsi_Host *s_h;
    /* ... */
    data_end = pages_start + sprintf(pages_start, format_topo,
                                     bus-&gt;busnum, level,
                                     parent_devnum,
                                     index, count, usbdev-&gt;devnum,
                                     speed, usbdev-&gt;maxchild);
+   /* Assume this device supports only one interface */
+   us_d = (struct us_data *)
+   (usbdev-&gt;actconfig-&gt;interface[0]-&gt;private_data);
+
+   if ((us_d) &amp;&amp; (!strncmp(us_d-&gt;magic, &quot;disk&quot;, 4))) {
+       s_h = (struct Scsi_Host *) container_of((void *)us_d,
+             struct Scsi_Host,
+             hostdata);
+       data_end += sprintf(data_end, &quot;N: &quot;);
+       data_end += sprintf(data_end, &quot;Device=%.100s&quot;,s_h-&gt;snam);
+       if (!strncmp(s_h-&gt;snam, &quot;sr&quot;, 2)) {
+           data_end += sprintf(data_end, &quot; (CDROM)\n&quot;);
+       } else if (!strncmp(s_h-&gt;snam, &quot;sd&quot;, 2)) {
+           data_end += sprintf(data_end, &quot; (Disk)\n&quot;);
+       }
+   }
    /* ... */
}



syntax highlighted by Code2HTML, v. 0.9.1


lines: 0
