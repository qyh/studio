<html>
<head>
  <title>Listing 10.3</title>
</head>
<body bgcolor="#ffffff" text="#000000">
<pre>

<font color="0000ff"><strong>#include <font color="#008000">&lt;linux/pci.h&gt;</font></strong></font>

<strong>unsigned</strong> <strong>long</strong> <font color="#2040a0">ioaddr</font><font color="4444FF">;</font>

<font color="#444444">/* Probe method */</font>
<strong>static</strong> <strong>int</strong> <font color="#2040a0">__devinit</font>
<font color="#2040a0">net_driver_probe</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">pci_dev</font> <font color="4444FF">*</font><font color="#2040a0">pdev</font>,
                 <strong>const</strong> <strong>struct</strong> <font color="#2040a0">pci_device_id</font> <font color="4444FF">*</font><font color="#2040a0">id</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>

    <font color="#444444">/* The net_device structure is defined in include/linux/netdevice.h.
       See Chapter 15, &quot;Network Interface Cards,&quot; for the description */</font>
    <strong>struct</strong> <font color="#2040a0">net_device</font> <font color="4444FF">*</font><font color="#2040a0">net_dev</font><font color="4444FF">;</font>

    <font color="#444444">/* Ask low-level PCI code to enable I/O and memory regions for
       this device. Look up the IRQ for the device that the PCI
       subsystem allotted when it walked the bus */</font>
    <font color="#2040a0">pci_enable_device</font><font color="4444FF">(</font><font color="#2040a0">pdev</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Use this device in bus mastering mode, since the network
       function of this card is capable of DMA */</font>
    <font color="#2040a0">pci_set_master</font><font color="4444FF">(</font><font color="#2040a0">pdev</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Allocate an Ethernet interface and fill in generic values in
       the net_dev structure. prv_data is the private driver data
       structure that contains buffers, locks, and so on. This is
       left undefined. Wait until Chapter 15 for more on
       alloc_etherdev() */</font>
    <font color="#2040a0">net_dev</font> <font color="4444FF">=</font> <font color="#2040a0">alloc_etherdev</font><font color="4444FF">(</font><strong>sizeof</strong><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">prv_data</font><font color="4444FF">)</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Populate net_dev with your network device driver methods */</font>
    <font color="#2040a0">net_dev</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">hard_start_xmit</font> <font color="4444FF">=</font> <font color="4444FF">&amp;</font><font color="#2040a0">mydevice_xmit</font><font color="4444FF">;</font> <font color="#444444">/* See Listing 10.6 */</font>

    <font color="#444444">/* More net_dev initializations */</font>
    <font color="#444444">/* ... */</font>

    <font color="#444444">/* Get the I/O address for this PCI region. All card registers
       specified in Table 10.3 are assumed to be in bar 0 */</font>
    <font color="#2040a0">ioaddr</font> <font color="4444FF">=</font> <font color="#2040a0">pci_resource_start</font><font color="4444FF">(</font><font color="#2040a0">pdev</font>, <font color="#FF0000">0</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Claim a 128-byte I/O region */</font>
    <font color="#2040a0">request_region</font><font color="4444FF">(</font><font color="#2040a0">ioaddr</font>, <font color="#FF0000">128</font>, <font color="#008000">&quot;ntwrk&quot;</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Fill in resource information obtained from the PCI layer */</font>
    <font color="#2040a0">net_dev</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">base_addr</font> <font color="4444FF">=</font> <font color="#2040a0">ioaddr</font><font color="4444FF">;</font>
    <font color="#2040a0">net_dev</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">irq</font> <font color="4444FF">=</font> <font color="#2040a0">pdev</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">irq</font><font color="4444FF">;</font>

    <font color="#444444">/* ... */</font>

    <font color="#444444">/* Setup DMA. Defined in Listing 10.5 */</font>
    <font color="#2040a0">dma_descriptor_setup</font><font color="4444FF">(</font><font color="#2040a0">pdev</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Register the driver with the network layer. This will allot
       an unused ethX interface */</font>
    <font color="#2040a0">register_netdev</font><font color="4444FF">(</font><font color="#2040a0">net_dev</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* ... */</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Remove method */</font>
<strong>static</strong> <strong>void</strong> <font color="#2040a0">__devexit</font>
<font color="#2040a0">net_driver_remove</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">pci_dev</font> <font color="4444FF">*</font><font color="#2040a0">pdev</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* Free transmit and receive DMA buffers.
       Defined in Listing 10.5 */</font>
    <font color="#2040a0">dma_descriptor_release</font><font color="4444FF">(</font><font color="#2040a0">pdev</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Release memory regions */</font>
    <font color="#444444">/* ... */</font>

    <font color="#444444">/* Unregister from the networking layer */</font>
    <font color="#2040a0">unregister_netdev</font><font color="4444FF">(</font><font color="#2040a0">dev</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <font color="#2040a0">free_netdev</font><font color="4444FF">(</font><font color="#2040a0">dev</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* ... */</font>
<font color="4444FF"><strong>}</strong></font> 

</pre>
<hr>
syntax highlighted by <a href="http://www.palfrader.org/code2html">Code2HTML</a>, v. 0.9.1
</body>
</html>
