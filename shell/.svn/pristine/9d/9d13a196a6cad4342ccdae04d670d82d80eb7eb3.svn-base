<html>
<head>
  <title>Listing 5.9</title>
</head>
<body bgcolor="#ffffff" text="#000000">
<pre>

<font color="0000ff"><strong>#include <font color="#008000">&lt;linux/miscdevice.h&gt;</font></strong></font>
<font color="0000ff"><strong>#include <font color="#008000">&lt;linux/watchdog.h&gt;</font></strong></font>

<font color="0000ff"><strong>#define DEFAULT_WATCHDOG_TIMEOUT 10<font color="#444444"> /* 10-second timeout */</font></strong></font>
<font color="0000ff"><strong>#define TIMEOUT_SHIFT 5             /* To get to the timeout field</strong></font>
                                       <font color="#2040a0">in</font> <font color="#2040a0">WD_CONTROL_REGISTER</font> <font color="4444FF">*</font>/
<font color="0000ff"><strong>#define WENABLE_SHIFT 3             /* To get to the</strong></font>
                                       <font color="#2040a0">watchdog</font><font color="4444FF">-</font><font color="#2040a0">enable</font> <font color="#2040a0">field</font> <font color="#2040a0">in</font>
                                       <font color="#2040a0">WD_CONTROL_REGISTER</font> <font color="4444FF">*</font>/

<font color="#444444">/* Misc structure */</font>
<strong>static</strong> <strong>struct</strong> <font color="#2040a0">miscdevice</font> <font color="#2040a0">my_wdt_dev</font> <font color="4444FF">=</font> <font color="4444FF"><strong>{</strong></font>
    .<font color="#2040a0">minor</font> <font color="4444FF">=</font> <font color="#2040a0">WATCHDOG_MINOR</font>, <font color="#444444">/* defined as 130 in
                                include/linux/miscdevice.h */</font>
    .<font color="#2040a0">name</font> <font color="4444FF">=</font> <font color="#008000">&quot;watchdog&quot;</font>,      <font color="#444444">/* /dev/watchdog */</font>
    .<font color="#2040a0">fops</font> <font color="4444FF">=</font> <font color="4444FF">&amp;</font><font color="#2040a0">my_wdt_dog</font>      <font color="#444444">/* Watchdog driver entry points */</font>
<font color="4444FF"><strong>}</strong></font><font color="4444FF">;</font>

<font color="#444444">/* Driver methods */</font>
<strong>struct</strong> <font color="#2040a0">file_operations</font> <font color="#2040a0">my_wdt_dog</font> <font color="4444FF">=</font> <font color="4444FF"><strong>{</strong></font>
    .<font color="#2040a0">owner</font> <font color="4444FF">=</font> <font color="#2040a0">THIS_MODULE</font>,
    .<font color="#2040a0">open</font> <font color="4444FF">=</font> <font color="#2040a0">my_wdt_open</font>,
    .<font color="#2040a0">release</font> <font color="4444FF">=</font> <font color="#2040a0">my_wdt_close</font>,
    .<font color="#2040a0">write</font> <font color="4444FF">=</font> <font color="#2040a0">my_wdt_write</font>,
    .<font color="#2040a0">ioctl</font> <font color="4444FF">=</font> <font color="#2040a0">my_wdt_ioctl</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Module Initialization */</font>
<strong>static</strong> <strong>int</strong> <font color="#2040a0">__init</font>
<font color="#2040a0">my_wdt_init</font><font color="4444FF">(</font><strong>void</strong><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* ... */</font>
    <font color="#2040a0">misc_register</font><font color="4444FF">(</font><font color="4444FF">&amp;</font><font color="#2040a0">my_wdt_dev</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <font color="#444444">/* ... */</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Open watchdog */</font>
<strong>static</strong> <strong>void</strong>
<font color="#2040a0">my_wdt_open</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">inode</font> <font color="4444FF">*</font><font color="#2040a0">inode</font>, <strong>struct</strong> <font color="#2040a0">file</font> <font color="4444FF">*</font><font color="#2040a0">file</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* Set the timeout and enable the watchdog */</font>
    <font color="#2040a0">WD_CONTROL_REGISTER</font> <font color="4444FF">|</font><font color="4444FF">=</font> <font color="#2040a0">DEFAULT_WATCHDOG_TIMEOUT</font> <font color="4444FF">&lt;</font><font color="4444FF">&lt;</font> <font color="#2040a0">TIMEOUT_SHIFT</font><font color="4444FF">;</font>
    <font color="#2040a0">WD_CONTROL_REGISTER</font> <font color="4444FF">|</font><font color="4444FF">=</font> <font color="#FF0000">1</font> <font color="4444FF">&lt;</font><font color="4444FF">&lt;</font> <font color="#2040a0">WENABLE_SHIFT</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Close watchdog */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">my_wdt_close</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">inode</font> <font color="4444FF">*</font><font color="#2040a0">inode</font>, <strong>struct</strong> <font color="#2040a0">file</font> <font color="4444FF">*</font><font color="#2040a0">file</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* If CONFIG_WATCHDOG_NOWAYOUT is chosen during kernel
       configuration, do not disable the watchdog even if the
       application desires to close it */</font>
<font color="0000ff"><strong>#ifndef CONFIG_WATCHDOG_NOWAYOUT</strong></font>
    <font color="#444444">/* Disable watchdog */</font>
    <font color="#2040a0">WD_CONTROL_REGISTER</font> <font color="4444FF">&amp;</font><font color="4444FF">=</font> ~<font color="4444FF">(</font><font color="#FF0000">1</font> <font color="4444FF">&lt;</font><font color="4444FF">&lt;</font> <font color="#2040a0">WENABLE_SHIFT</font><font color="4444FF">)</font><font color="4444FF">;</font>
<font color="0000ff"><strong>#endif</strong></font>
    <strong>return</strong> <font color="#FF0000">0</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Pet the dog */</font>
<strong>static</strong> <font color="#2040a0">ssize_t</font>
<font color="#2040a0">my_wdt_write</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">file</font> <font color="4444FF">*</font><font color="#2040a0">file</font>, <strong>const</strong> <strong>char</strong> <font color="4444FF">*</font><font color="#2040a0">data</font>,
             <font color="#2040a0">size_t</font> <font color="#2040a0">len</font>, <font color="#2040a0">loff_t</font> <font color="4444FF">*</font><font color="#2040a0">ppose</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* Pet the dog by writing a specified sequence of bytes to the
       watchdog service register */</font>
    <font color="#2040a0">WD_SERVICE_REGISTER</font> <font color="4444FF">=</font> <font color="#FF0000">0xABCD</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Ioctl method. Look at Documentation/watchdog/watchdog-api
   for the full list of ioctl commands. This is standard across
   watchdog drivers, so conforming applications are rendered
   hardware-independent */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">my_wdt_ioctl</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">inode</font> <font color="4444FF">*</font><font color="#2040a0">inode</font>, <strong>struct</strong> <font color="#2040a0">file</font> <font color="4444FF">*</font><font color="#2040a0">file</font>,
             <strong>unsigned</strong> <strong>int</strong> <font color="#2040a0">cmd</font>, <strong>unsigned</strong> <strong>long</strong> <font color="#2040a0">arg</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* ... */</font>
    <strong>switch</strong> <font color="4444FF">(</font><font color="#2040a0">cmd</font><font color="4444FF">)</font> <font color="4444FF"><strong>{</strong></font>
    <strong>case</strong> <font color="#2040a0">WDIOC_KEEPALIVE</font><font color="4444FF">:</font>
        <font color="#444444">/* Write to the watchdog. Applications can invoke
           this ioctl instead of writing to the device */</font>
        <font color="#2040a0">WD_SERVICE_REGISTER</font> <font color="4444FF">=</font> <font color="#FF0000">0xABCD</font><font color="4444FF">;</font>
        <strong>break</strong><font color="4444FF">;</font>
    <strong>case</strong> <font color="#2040a0">WDIOC_SETTIMEOUT</font><font color="4444FF">:</font>
        <font color="#2040a0">copy_from_user</font><font color="4444FF">(</font><font color="4444FF">&amp;</font><font color="#2040a0">timeout</font>, <font color="4444FF">(</font><strong>int</strong> <font color="4444FF">*</font><font color="4444FF">)</font><font color="#2040a0">arg</font>, <strong>sizeof</strong><font color="4444FF">(</font><strong>int</strong><font color="4444FF">)</font><font color="4444FF">)</font><font color="4444FF">;</font>
        <font color="#444444">/* Set the timeout that defines unresponsiveness by
           writing to the watchdog control register */</font>
        <font color="#2040a0">WD_CONTROL_REGISTER</font> <font color="4444FF">=</font> <font color="#2040a0">timeout</font> <font color="4444FF">&lt;</font><font color="4444FF">&lt;</font> <font color="#2040a0">TIMEOUT_BITS</font><font color="4444FF">;</font>
        <strong>break</strong><font color="4444FF">;</font>
    <strong>case</strong> <font color="#2040a0">WDIOC_GETTIMEOUT</font><font color="4444FF">:</font>
        <font color="#444444">/* Get the currently set timeout from the watchdog */</font>
        <font color="#444444">/* ... */</font>
        <strong>break</strong><font color="4444FF">;</font>
    <strong>default</strong><font color="4444FF">:</font>
        <strong>return</strong> <font color="4444FF">-</font><font color="#2040a0">ENOTTY</font><font color="4444FF">;</font>
    <font color="4444FF"><strong>}</strong></font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Module Exit */</font>
<strong>static</strong> <strong>void</strong> <font color="#2040a0">__exit</font>
<font color="#2040a0">my_wdt_exit</font><font color="4444FF">(</font><strong>void</strong><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* ... */</font>
    <font color="#2040a0">misc_deregister</font><font color="4444FF">(</font><font color="4444FF">&amp;</font><font color="#2040a0">my_wdt_dev</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <font color="#444444">/* ... */</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#2040a0">module_init</font><font color="4444FF">(</font><font color="#2040a0">my_wdt_init</font><font color="4444FF">)</font><font color="4444FF">;</font>
<font color="#2040a0">module_exit</font><font color="4444FF">(</font><font color="#2040a0">my_wdt_exit</font><font color="4444FF">)</font><font color="4444FF">;</font>

</pre>
<hr>
syntax highlighted by <a href="http://www.palfrader.org/code2html">Code2HTML</a>, v. 0.9.1
</body>
</html>
