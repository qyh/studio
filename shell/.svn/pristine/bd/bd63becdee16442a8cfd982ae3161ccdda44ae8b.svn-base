<html>
<head>
  <title>Listing 13.1</title>
</head>
<body bgcolor="#ffffff" text="#000000">
<pre>

<font color="0000ff"><strong>#include <font color="#008000">&lt;linux/platform_device.h&gt;</font></strong></font>
<font color="0000ff"><strong>#include <font color="#008000">&lt;linux/soundcard.h&gt;</font></strong></font>
<font color="0000ff"><strong>#include <font color="#008000">&lt;sound/driver.h&gt;</font></strong></font>
<font color="0000ff"><strong>#include <font color="#008000">&lt;sound/core.h&gt;</font></strong></font>
<font color="0000ff"><strong>#include <font color="#008000">&lt;sound/pcm.h&gt;</font></strong></font>
<font color="0000ff"><strong>#include <font color="#008000">&lt;sound/initval.h&gt;</font></strong></font>
<font color="0000ff"><strong>#include <font color="#008000">&lt;sound/control.h&gt;</font></strong></font>

<font color="#444444">/* Playback rates supported by the codec */</font>
<strong>static</strong> <strong>unsigned</strong> <strong>int</strong> <font color="#2040a0">mycard_rates</font><font color="4444FF">[</font><font color="4444FF">]</font> <font color="4444FF">=</font> <font color="4444FF"><strong>{</strong></font>
    <font color="#FF0000">8000</font>,
    <font color="#FF0000">48000</font>,
<font color="4444FF"><strong>}</strong></font><font color="4444FF">;</font>

<font color="#444444">/* Hardware constraints for the playback channel */</font>
<strong>static</strong> <strong>struct</strong> <font color="#2040a0">snd_pcm_hw_constraint_list</font> <font color="#2040a0">mycard_playback_rates</font> <font color="4444FF">=</font> <font color="4444FF"><strong>{</strong></font>
    .<font color="#2040a0">count</font> <font color="4444FF">=</font> <font color="#2040a0">ARRAY_SIZE</font><font color="4444FF">(</font><font color="#2040a0">mycard_rates</font><font color="4444FF">)</font>,
    .<font color="#2040a0">list</font> <font color="4444FF">=</font> <font color="#2040a0">mycard_rates</font>,
    .<font color="#2040a0">mask</font> <font color="4444FF">=</font> <font color="#FF0000">0</font>,
<font color="4444FF"><strong>}</strong></font><font color="4444FF">;</font>

<strong>static</strong> <strong>struct</strong> <font color="#2040a0">platform_device</font> <font color="4444FF">*</font><font color="#2040a0">mycard_device</font><font color="4444FF">;</font>
<strong>static</strong> <strong>char</strong> <font color="4444FF">*</font><font color="#2040a0">id</font><font color="4444FF">[</font><font color="#2040a0">SNDRV_CARDS</font><font color="4444FF">]</font> <font color="4444FF">=</font> <font color="#2040a0">SNDRV_DEFAULT_STR</font><font color="4444FF">;</font>

<font color="#444444">/* Hardware capabilities of the PCM stream */</font>
<strong>static</strong> <strong>struct</strong> <font color="#2040a0">snd_pcm_hardware</font> <font color="#2040a0">mycard_playback_stereo</font> <font color="4444FF">=</font> <font color="4444FF"><strong>{</strong></font>
    .<font color="#2040a0">info</font> <font color="4444FF">=</font> <font color="4444FF">(</font><font color="#2040a0">SNDRV_PCM_INFO_MMAP</font> <font color="4444FF">|</font> <font color="#2040a0">SNDRV_PCM_INFO_BLOCK_TRANSFER</font><font color="4444FF">)</font>,
    .<font color="#2040a0">formats</font> <font color="4444FF">=</font> <font color="#2040a0">SNDRV_PCM_FMTBIT_S16_LE</font>,
                               <font color="#444444">/* 16 bits per channel, little endian */</font>
    .<font color="#2040a0">rates</font> <font color="4444FF">=</font> <font color="#2040a0">SNDRV_PCM_RATE_8000_48000</font>,
                               <font color="#444444">/* DAC Sampling rate range */</font>
    .<font color="#2040a0">rate_min</font> <font color="4444FF">=</font> <font color="#FF0000">8000</font>,          <font color="#444444">/* Minimum sampling rate */</font>
    .<font color="#2040a0">rate_max</font> <font color="4444FF">=</font> <font color="#FF0000">48000</font>,         <font color="#444444">/* Maximum sampling rate */</font>
    .<font color="#2040a0">channels_min</font> <font color="4444FF">=</font> <font color="#FF0000">2</font>,         <font color="#444444">/* Supports a left and a right channel */</font>
    .<font color="#2040a0">channels_max</font> <font color="4444FF">=</font> <font color="#FF0000">2</font>,         <font color="#444444">/* Supports a left and a right channel */</font>
    .<font color="#2040a0">buffer_bytes_max</font> <font color="4444FF">=</font> <font color="#FF0000">32768</font>, <font color="#444444">/* Maximum buffer size */</font>
<font color="4444FF"><strong>}</strong></font><font color="4444FF">;</font>

<font color="#444444">/* Open the device in playback mode */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">mycard_pb_open</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">snd_pcm_substream</font> <font color="4444FF">*</font><font color="#2040a0">substream</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <strong>struct</strong> <font color="#2040a0">snd_pcm_runtime</font> <font color="4444FF">*</font><font color="#2040a0">runtime</font> <font color="4444FF">=</font> <font color="#2040a0">substream</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">runtime</font><font color="4444FF">;</font>

    <font color="#444444">/* Initialize driver structures */</font>
    <font color="#444444">/* ... */</font>

    <font color="#444444">/* Initialize codec registers */</font>
    <font color="#444444">/* ... */</font>

    <font color="#444444">/* Associate the hardware capabilities of this PCM component */</font>
    <font color="#2040a0">runtime</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">hw</font> <font color="4444FF">=</font> <font color="#2040a0">mycard_playback_stereo</font><font color="4444FF">;</font>

    <font color="#444444">/* Inform the ALSA framework about the constraints that
       the codec has. For example, in this case, it supports
       PCM sampling rates of 8000Hz and 48000Hz only */</font>
    <font color="#2040a0">snd_pcm_hw_constraint_list</font><font color="4444FF">(</font><font color="#2040a0">runtime</font>, <font color="#FF0000">0</font>,
                               <font color="#2040a0">SNDRV_PCM_HW_PARAM_RATE</font>,
                               <font color="4444FF">&amp;</font><font color="#2040a0">mycard_playback_rates</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <strong>return</strong> <font color="#FF0000">0</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Close */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">mycard_pb_close</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">snd_pcm_substream</font> <font color="4444FF">*</font><font color="#2040a0">substream</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* Disable the codec, stop DMA, free data structures */</font>
    <font color="#444444">/* ... */</font>

    <strong>return</strong> <font color="#FF0000">0</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Write to codec registers by communicating over
   the bus that connects the SoC to the codec */</font>
<strong>void</strong>
<font color="#2040a0">codec_write_reg</font><font color="4444FF">(</font><font color="#2040a0">uint</font> <font color="#2040a0">codec_register</font>, <font color="#2040a0">uint</font> <font color="#2040a0">value</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* ... */</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Prepare to transfer an audio stream to the codec */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">mycard_pb_prepare</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">snd_pcm_substream</font> <font color="4444FF">*</font><font color="#2040a0">substream</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* Enable Transmit DMA complete interrupt by writing to
       CONTROL_REGISTER using codec_write_reg() */</font>

    <font color="#444444">/* Set the sampling rate by writing to SAMPLING_RATE_REGISTER */</font>

    <font color="#444444">/* Configure clock source and enable clocking by writing
       to CLOCK_INPUT_REGISTER */</font>

    <font color="#444444">/* Allocate DMA descriptors for audio transfer */</font>

    <strong>return</strong> <font color="#FF0000">0</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Audio trigger/stop/.. */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">mycard_pb_trigger</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">snd_pcm_substream</font> <font color="4444FF">*</font><font color="#2040a0">substream</font>, <strong>int</strong> <font color="#2040a0">cmd</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <strong>switch</strong> <font color="4444FF">(</font><font color="#2040a0">cmd</font><font color="4444FF">)</font> <font color="4444FF"><strong>{</strong></font>
    <strong>case</strong> <font color="#2040a0">SNDRV_PCM_TRIGGER_START</font><font color="4444FF">:</font>
        <font color="#444444">/* Map the audio substream’s runtime audio buffer (which is an
           offset into runtime-&gt;dma_area) using dma_map_single(),
           populate the resulting address to the audio controller’s
           DMA_ADDRESS_REGISTER, and perform DMA */</font>
        <font color="#444444">/* ... */</font>
        <strong>break</strong><font color="4444FF">;</font>
    <strong>case</strong> <font color="#2040a0">SNDRV_PCM_TRIGGER_STOP</font><font color="4444FF">:</font>
        <font color="#444444">/* Shut the stream. Unmap DMA buffer using dma_unmap_single() */</font>
        <font color="#444444">/* ... */</font>
        <strong>break</strong><font color="4444FF">;</font>
    <strong>default</strong><font color="4444FF">:</font>
        <strong>return</strong> <font color="4444FF">-</font><font color="#2040a0">EINVAL</font><font color="4444FF">;</font>
        <strong>break</strong><font color="4444FF">;</font>
    <font color="4444FF"><strong>}</strong></font>
    <strong>return</strong> <font color="#FF0000">0</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Allocate DMA buffers using memory preallocated for DMA from the
   probe() method. dma_[map|unmap]_single() operate on this area
   later on */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">mycard_hw_params</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">snd_pcm_substream</font> <font color="4444FF">*</font><font color="#2040a0">substream</font>,
                 <strong>struct</strong> <font color="#2040a0">snd_pcm_hw_params</font> <font color="4444FF">*</font><font color="#2040a0">hw_params</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* Use preallocated memory from mycard_audio_probe() to
       satisfy this memory request */</font>
    <strong>return</strong> <font color="#2040a0">snd_pcm_lib_malloc_pages</font><font color="4444FF">(</font><font color="#2040a0">substream</font>,
                                    <font color="#2040a0">params_buffer_bytes</font><font color="4444FF">(</font><font color="#2040a0">hw_params</font><font color="4444FF">)</font><font color="4444FF">)</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Reverse of mycard_hw_params() */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">mycard_hw_free</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">snd_pcm_substream</font> <font color="4444FF">*</font><font color="#2040a0">substream</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <strong>return</strong> <font color="#2040a0">snd_pcm_lib_free_pages</font><font color="4444FF">(</font><font color="#2040a0">substream</font><font color="4444FF">)</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Volume info */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">mycard_pb_vol_info</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">snd_kcontrol</font> <font color="4444FF">*</font><font color="#2040a0">kcontrol</font>,
                   <strong>struct</strong> <font color="#2040a0">snd_ctl_elem_info</font> <font color="4444FF">*</font><font color="#2040a0">uinfo</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#2040a0">uinfo</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">type</font> <font color="4444FF">=</font> <font color="#2040a0">SNDRV_CTL_ELEM_TYPE_INTEGER</font><font color="4444FF">;</font>
                                   <font color="#444444">/* Integer type */</font>
    <font color="#2040a0">uinfo</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">count</font> <font color="4444FF">=</font> <font color="#FF0000">1</font><font color="4444FF">;</font>              <font color="#444444">/* Number of values */</font>
    <font color="#2040a0">uinfo</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">value</font>.<font color="#2040a0">integer</font>.<font color="#2040a0">min</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font>  <font color="#444444">/* Minimum volume gain */</font>
    <font color="#2040a0">uinfo</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">value</font>.<font color="#2040a0">integer</font>.<font color="#2040a0">max</font> <font color="4444FF">=</font> <font color="#FF0000">10</font><font color="4444FF">;</font> <font color="#444444">/* Maximum volume gain */</font>
    <font color="#2040a0">uinfo</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">value</font>.<font color="#2040a0">integer</font>.<font color="#2040a0">step</font> <font color="4444FF">=</font> <font color="#FF0000">1</font><font color="4444FF">;</font> <font color="#444444">/* In steps of 1 */</font>
    <strong>return</strong> <font color="#FF0000">0</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Playback volume knob */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">mycard_pb_vol_put</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">snd_kcontrol</font> <font color="4444FF">*</font><font color="#2040a0">kcontrol</font>,
                  <strong>struct</strong> <font color="#2040a0">snd_ctl_elem_value</font> <font color="4444FF">*</font><font color="#2040a0">uvalue</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <strong>int</strong> <font color="#2040a0">global_volume</font> <font color="4444FF">=</font> <font color="#2040a0">uvalue</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">value</font>.<font color="#2040a0">integer</font>.<font color="#2040a0">value</font><font color="4444FF">[</font><font color="#FF0000">0</font><font color="4444FF">]</font><font color="4444FF">;</font>

    <font color="#444444">/* Write global_volume to VOLUME_REGISTER
       using codec_write_reg() */</font>
    <font color="#444444">/* ... */</font>

    <font color="#444444">/* If the volume changed from the current value, return 1.
       If there is an error, return negative code. Else return 0 */</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Get playback volume */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">mycard_pb_vol_get</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">snd_kcontrol</font> <font color="4444FF">*</font><font color="#2040a0">kcontrol</font>,
                  <strong>struct</strong> <font color="#2040a0">snd_ctl_elem_value</font> <font color="4444FF">*</font><font color="#2040a0">uvalue</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* Read global_volume from VOLUME_REGISTER
       and return it via uvalue-&gt;integer.value[0] */</font>
    <font color="#444444">/* ... */</font>

    <strong>return</strong> <font color="#FF0000">0</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Entry points for the playback mixer */</font>
<strong>static</strong> <strong>struct</strong> <font color="#2040a0">snd_kcontrol_new</font> <font color="#2040a0">mycard_playback_vol</font> <font color="4444FF">=</font> <font color="4444FF"><strong>{</strong></font>
    .<font color="#2040a0">iface</font> <font color="4444FF">=</font> <font color="#2040a0">SNDRV_CTL_ELEM_IFACE_MIXER</font>,
                                <font color="#444444">/* Control is of type MIXER */</font>
    .<font color="#2040a0">name</font> <font color="4444FF">=</font> <font color="#008000">&quot;MP3 Volume&quot;</font>,       <font color="#444444">/* Name */</font>
    .<font color="#2040a0">index</font> <font color="4444FF">=</font> <font color="#FF0000">0</font>,                 <font color="#444444">/* Codec No: 0 */</font>
    .<font color="#2040a0">info</font> <font color="4444FF">=</font> <font color="#2040a0">mycard_pb_vol_info</font>, <font color="#444444">/* Volume info */</font>
    .<font color="#2040a0">get</font> <font color="4444FF">=</font> <font color="#2040a0">mycard_pb_vol_get</font>,   <font color="#444444">/* Get volume */</font>
    .<font color="#2040a0">put</font> <font color="4444FF">=</font> <font color="#2040a0">mycard_pb_vol_put</font>,   <font color="#444444">/* Set volume */</font>
<font color="4444FF"><strong>}</strong></font><font color="4444FF">;</font>

<font color="#444444">/* Operators for the PCM playback stream */</font>
<strong>static</strong> <strong>struct</strong> <font color="#2040a0">snd_pcm_ops</font> <font color="#2040a0">mycard_playback_ops</font> <font color="4444FF">=</font> <font color="4444FF"><strong>{</strong></font>
    .<font color="#2040a0">open</font> <font color="4444FF">=</font> <font color="#2040a0">mycard_playback_open</font>,       <font color="#444444">/* Open */</font>
    .<font color="#2040a0">close</font> <font color="4444FF">=</font> <font color="#2040a0">mycard_playback_close</font>,     <font color="#444444">/* Close */</font>
    .<font color="#2040a0">ioctl</font> <font color="4444FF">=</font> <font color="#2040a0">snd_pcm_lib_ioctl</font>,         <font color="#444444">/* Generic ioctl handler */</font>
    .<font color="#2040a0">hw_params</font> <font color="4444FF">=</font> <font color="#2040a0">mycard_hw_params</font>,      <font color="#444444">/* Hardware parameters */</font>
    .<font color="#2040a0">hw_free</font> <font color="4444FF">=</font> <font color="#2040a0">mycard_hw_free</font>,          <font color="#444444">/* Free h/w params */</font>
    .<font color="#2040a0">prepare</font> <font color="4444FF">=</font> <font color="#2040a0">mycard_playback_prepare</font>, <font color="#444444">/* Prepare to transfer audio stream */</font>
    .<font color="#2040a0">trigger</font> <font color="4444FF">=</font> <font color="#2040a0">mycard_playback_trigger</font>, <font color="#444444">/* Called when the PCM engine
                                           starts/stops/pauses */</font>
<font color="4444FF"><strong>}</strong></font><font color="4444FF">;</font>

<font color="#444444">/* Platform driver probe() method */</font>
<strong>static</strong> <strong>int</strong> <font color="#2040a0">__init</font>
<font color="#2040a0">mycard_audio_probe</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">platform_device</font> <font color="4444FF">*</font><font color="#2040a0">dev</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <strong>struct</strong> <font color="#2040a0">snd_card</font> <font color="4444FF">*</font><font color="#2040a0">card</font><font color="4444FF">;</font>
    <strong>struct</strong> <font color="#2040a0">snd_pcm</font> <font color="4444FF">*</font><font color="#2040a0">pcm</font><font color="4444FF">;</font>
    <strong>int</strong> <font color="#2040a0">myctl_private</font><font color="4444FF">;</font>

    <font color="#444444">/* Instantiate an snd_card structure */</font>
    <font color="#2040a0">card</font> <font color="4444FF">=</font> <font color="#2040a0">snd_card_new</font><font color="4444FF">(</font><font color="4444FF">-</font><font color="#FF0000">1</font>, <font color="#2040a0">id</font><font color="4444FF">[</font><font color="#2040a0">dev</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">id</font><font color="4444FF">]</font>, <font color="#2040a0">THIS_MODULE</font>, <font color="#FF0000">0</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Create a new PCM instance with 1 playback substream
       and 0 capture streams */</font>
    <font color="#2040a0">snd_pcm_new</font><font color="4444FF">(</font><font color="#2040a0">card</font>, <font color="#008000">&quot;mycard_pcm&quot;</font>, <font color="#FF0000">0</font>, <font color="#FF0000">1</font>, <font color="#FF0000">0</font>, <font color="4444FF">&amp;</font><font color="#2040a0">pcm</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Set up our initial DMA buffers */</font>
    <font color="#2040a0">snd_pcm_lib_preallocate_pages_for_all</font><font color="4444FF">(</font><font color="#2040a0">pcm</font>,
                                          <font color="#2040a0">SNDRV_DMA_TYPE_CONTINUOUS</font>,
                                          <font color="#2040a0">snd_dma_continuous_data</font>
                                          <font color="4444FF">(</font><font color="#2040a0">GFP_KERNEL</font><font color="4444FF">)</font>, <font color="#FF0000">256</font><font color="4444FF">*</font><font color="#FF0000">1024</font>,
                                          <font color="#FF0000">256</font><font color="4444FF">*</font><font color="#FF0000">1024</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Connect playback operations with the PCM instance */</font>
    <font color="#2040a0">snd_pcm_set_ops</font><font color="4444FF">(</font><font color="#2040a0">pcm</font>, <font color="#2040a0">SNDRV_PCM_STREAM_PLAYBACK</font>,
                    <font color="4444FF">&amp;</font><font color="#2040a0">mycard_playback_ops</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Associate a mixer control element with this card */</font>
    <font color="#2040a0">snd_ctl_add</font><font color="4444FF">(</font><font color="#2040a0">card</font>, <font color="#2040a0">snd_ctl_new1</font><font color="4444FF">(</font><font color="4444FF">&amp;</font><font color="#2040a0">mycard_playback_vol</font>,
                                   <font color="4444FF">&amp;</font><font color="#2040a0">myctl_private</font><font color="4444FF">)</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <font color="#2040a0">strcpy</font><font color="4444FF">(</font><font color="#2040a0">card</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">driver</font>, <font color="#008000">&quot;mycard&quot;</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Register the sound card */</font>
    <font color="#2040a0">snd_card_register</font><font color="4444FF">(</font><font color="#2040a0">card</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Store card for access from other methods */</font>
    <font color="#2040a0">platform_set_drvdata</font><font color="4444FF">(</font><font color="#2040a0">dev</font>, <font color="#2040a0">card</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <strong>return</strong> <font color="#FF0000">0</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Platform driver remove() method */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">mycard_audio_remove</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">platform_device</font> <font color="4444FF">*</font><font color="#2040a0">dev</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#2040a0">snd_card_free</font><font color="4444FF">(</font><font color="#2040a0">platform_get_drvdata</font><font color="4444FF">(</font><font color="#2040a0">dev</font><font color="4444FF">)</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <font color="#2040a0">platform_set_drvdata</font><font color="4444FF">(</font><font color="#2040a0">dev</font>, <font color="#2040a0">NULL</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <strong>return</strong> <font color="#FF0000">0</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Platform driver definition */</font>
<strong>static</strong> <strong>struct</strong> <font color="#2040a0">platform_driver</font> <font color="#2040a0">mycard_audio_driver</font> <font color="4444FF">=</font> <font color="4444FF"><strong>{</strong></font>
    .<font color="#2040a0">probe</font> <font color="4444FF">=</font> <font color="#2040a0">mycard_audio_probe</font>,   <font color="#444444">/* Probe method */</font>
    .<font color="#2040a0">remove</font> <font color="4444FF">=</font> <font color="#2040a0">mycard_audio_remove</font>, <font color="#444444">/* Remove method */</font>
    .<font color="#2040a0">driver</font> <font color="4444FF">=</font> <font color="4444FF"><strong>{</strong></font>
        .<font color="#2040a0">name</font> <font color="4444FF">=</font> <font color="#008000">&quot;mycard_ALSA&quot;</font>,
    <font color="4444FF"><strong>}</strong></font>,
<font color="4444FF"><strong>}</strong></font><font color="4444FF">;</font>

<font color="#444444">/* Driver Initialization */</font>
<strong>static</strong> <strong>int</strong> <font color="#2040a0">__init</font>
<font color="#2040a0">mycard_audio_init</font><font color="4444FF">(</font><strong>void</strong><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* Register the platform driver and device */</font>
    <font color="#2040a0">platform_driver_register</font><font color="4444FF">(</font><font color="4444FF">&amp;</font><font color="#2040a0">mycard_audio_driver</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <font color="#2040a0">mycard_device</font> <font color="4444FF">=</font> <font color="#2040a0">platform_device_register_simple</font><font color="4444FF">(</font><font color="#008000">&quot;mycard_ALSA&quot;</font>,
                                                    <font color="4444FF">-</font><font color="#FF0000">1</font>, <font color="#2040a0">NULL</font>, <font color="#FF0000">0</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <strong>return</strong> <font color="#FF0000">0</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Driver Exit */</font>
<strong>static</strong> <strong>void</strong> <font color="#2040a0">__exit</font>
<font color="#2040a0">mycard_audio_exit</font><font color="4444FF">(</font><strong>void</strong><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#2040a0">platform_device_unregister</font><font color="4444FF">(</font><font color="#2040a0">mycard_device</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <font color="#2040a0">platform_driver_unregister</font><font color="4444FF">(</font><font color="4444FF">&amp;</font><font color="#2040a0">mycard_audio_driver</font><font color="4444FF">)</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#2040a0">module_init</font><font color="4444FF">(</font><font color="#2040a0">mycard_audio_init</font><font color="4444FF">)</font><font color="4444FF">;</font>
<font color="#2040a0">module_exit</font><font color="4444FF">(</font><font color="#2040a0">mycard_audio_exit</font><font color="4444FF">)</font><font color="4444FF">;</font>

<font color="#2040a0">MODULE_LICENSE</font><font color="4444FF">(</font><font color="#008000">&quot;GPL&quot;</font><font color="4444FF">)</font><font color="4444FF">;</font>


</pre>
<hr>
syntax highlighted by <a href="http://www.palfrader.org/code2html">Code2HTML</a>, v. 0.9.1
</body>
</html>
