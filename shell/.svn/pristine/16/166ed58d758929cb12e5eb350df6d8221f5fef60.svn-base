<html>
<head>
  <title>Listing 20.1</title>
</head>
<body bgcolor="#ffffff" text="#000000">
<pre>

<font color="#444444">/* Based on drivers/edac/i82860_edac.c */</font>
<font color="0000ff"><strong>#define I855_PCI_DEVICE_ID   0x3584 /* PCI Device ID of the memory</strong></font>
                                       <font color="#2040a0">controller</font> <font color="#2040a0">in</font> <font color="#2040a0">the</font> <font color="#FF0000">855</font> <font color="#2040a0">GME</font> <font color="4444FF">*</font>/
<font color="0000ff"><strong>#define I855_ERRSTS_REGISTER 0x62   /* Error Status Register's offset</strong></font>
                                       <font color="#2040a0">in</font> <font color="#2040a0">the</font> <font color="#2040a0">PCI</font> <font color="#2040a0">configuration</font> <font color="#2040a0">space</font> <font color="4444FF">*</font>/
<font color="0000ff"><strong>#define I855_EAP_REGISTER    0x98   /* Error Address Pointer Register's</strong></font>
                                       <font color="#2040a0">offset</font> <font color="#2040a0">in</font> <font color="#2040a0">the</font> <font color="#2040a0">PCI</font> <font color="#2040a0">configuration</font> <font color="#2040a0">space</font> <font color="4444FF">*</font>/

<strong>struct</strong> <font color="#2040a0">i855_error_info</font> <font color="4444FF"><strong>{</strong></font>
    <font color="#2040a0">u16</font> <font color="#2040a0">errsts</font><font color="4444FF">;</font> <font color="#444444">/* Error Type */</font>
    <font color="#2040a0">u32</font> <font color="#2040a0">eap</font><font color="4444FF">;</font> <font color="#444444">/* Error Location */</font>
<font color="4444FF"><strong>}</strong></font><font color="4444FF">;</font>

<font color="#444444">/* Get error information */</font>
<strong>static</strong> <strong>void</strong>
<font color="#2040a0">i855_get_error_info</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">mem_ctl_info</font> <font color="4444FF">*</font><font color="#2040a0">mci</font>,
                    <strong>struct</strong> <font color="#2040a0">i855_error_info</font> <font color="4444FF">*</font><font color="#2040a0">info</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <strong>struct</strong> <font color="#2040a0">pci_dev</font> <font color="4444FF">*</font><font color="#2040a0">pdev</font><font color="4444FF">;</font>
 
    <font color="#2040a0">pdev</font> <font color="4444FF">=</font> <font color="#2040a0">to_pci_dev</font><font color="4444FF">(</font><font color="#2040a0">mci</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">dev</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Read error type */</font>
    <font color="#2040a0">pci_read_config_word</font><font color="4444FF">(</font><font color="#2040a0">pdev</font>, <font color="#2040a0">I855_ERRSTS_REGISTER</font>, <font color="4444FF">&amp;</font><font color="#2040a0">info</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">errsts</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Read error location */</font>
    <font color="#2040a0">pci_read_config_dword</font><font color="4444FF">(</font><font color="#2040a0">pdev</font>, <font color="#2040a0">I855_EAP_REGISTER</font>, <font color="4444FF">&amp;</font><font color="#2040a0">info</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">eap</font><font color="4444FF">)</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Process errors */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">i855_process_error_info</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">mem_ctl_info</font> <font color="4444FF">*</font><font color="#2040a0">mci</font>,
                        <strong>struct</strong> <font color="#2040a0">i855_error_info</font> <font color="4444FF">*</font><font color="#2040a0">info</font>,
                        <strong>int</strong> <font color="#2040a0">handle_errors</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <strong>int</strong> <font color="#2040a0">row</font><font color="4444FF">;</font>

    <font color="#2040a0">info</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">eap</font> <font color="4444FF">&gt;</font><font color="4444FF">&gt;</font><font color="4444FF">=</font> <font color="#2040a0">PAGE_SHIFT</font><font color="4444FF">;</font>
    <font color="#2040a0">row</font> <font color="4444FF">=</font> <font color="#2040a0">edac_mc_find_csrow_by_page</font><font color="4444FF">(</font><font color="#2040a0">mci</font>, <font color="#2040a0">info</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">eap</font><font color="4444FF">)</font><font color="4444FF">;</font> <font color="#444444">/* Find culprit row */</font>

    <font color="#444444">/* Handle using services provided by the EDAC core.
       Populate sysfs, generate error messages, and so on */</font>
    
    <strong>if</strong> <font color="4444FF">(</font><font color="#2040a0">is_MBE</font><font color="4444FF">(</font><font color="4444FF">)</font><font color="4444FF">)</font> <font color="4444FF"><strong>{</strong></font>        <font color="#444444">/* is_MBE() looks at I855_ERRSTS_REGISTER and checks
                              for an MBE. Implementation not shown */</font>
        <font color="#2040a0">edac_mc_handle_ue</font><font color="4444FF">(</font><font color="#2040a0">mci</font>, <font color="#2040a0">info</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">eap</font>, <font color="#FF0000">0</font>, <font color="#2040a0">row</font>, <font color="#008000">&quot;i855 UE&quot;</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <font color="4444FF"><strong>}</strong></font> <strong>else</strong> <strong>if</strong> <font color="4444FF">(</font><font color="#2040a0">is_SBE</font><font color="4444FF">(</font><font color="4444FF">)</font><font color="4444FF">)</font> <font color="4444FF"><strong>{</strong></font> <font color="#444444">/* is_SBE() looks at I855_ERRSTS_REGISTER and checks
                              for an SBE. Implementation not shown */</font>
        <font color="#2040a0">edac_mc_handle_ce</font><font color="4444FF">(</font><font color="#2040a0">mci</font>, <font color="#2040a0">info</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">eap</font>, <font color="#FF0000">0</font>, <font color="#2040a0">info</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">derrsyn</font>, <font color="#2040a0">row</font>, <font color="#FF0000">0</font>,
                          <font color="#008000">&quot;i855 CE&quot;</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <font color="4444FF"><strong>}</strong></font>

    <strong>return</strong> <font color="#FF0000">1</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* This method is registered with the EDAC core from i855_probe() */</font>
<strong>static</strong> <strong>void</strong>
<font color="#2040a0">i855_check</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">mem_ctl_info</font> <font color="4444FF">*</font><font color="#2040a0">mci</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <strong>struct</strong> <font color="#2040a0">i855_error_info</font> <font color="#2040a0">info</font><font color="4444FF">;</font>

    <font color="#2040a0">i855_get_error_info</font><font color="4444FF">(</font><font color="#2040a0">mci</font>, <font color="4444FF">&amp;</font><font color="#2040a0">info</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <font color="#2040a0">i855_process_error_info</font><font color="4444FF">(</font><font color="#2040a0">mci</font>, <font color="4444FF">&amp;</font><font color="#2040a0">info</font>, <font color="#FF0000">1</font><font color="4444FF">)</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* The PCI driver probe method, part of the pci_driver structure */</font>
<strong>static</strong> <strong>int</strong>
<font color="#2040a0">i855_probe</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">pci_dev</font> <font color="4444FF">*</font><font color="#2040a0">pdev</font>, <strong>int</strong> <font color="#2040a0">dev_idx</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <strong>struct</strong> <font color="#2040a0">mem_ctl_info</font> <font color="4444FF">*</font><font color="#2040a0">mci</font><font color="4444FF">;</font>

    <font color="#444444">/* ... */</font>

    <font color="#2040a0">pci_enable_device</font><font color="4444FF">(</font><font color="#2040a0">pdev</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* Allocate control memory for this memory controller.
       The 3 arguments to edac_mc_alloc() correspond to the
       amount of requested private storage, number of chip-select
       rows, and number of channels in your memory layout */</font>
    <font color="#2040a0">mci</font> <font color="4444FF">=</font> <font color="#2040a0">edac_mc_alloc</font><font color="4444FF">(</font><font color="#FF0000">0</font>, <font color="#2040a0">CSROWS</font>, <font color="#2040a0">CHANNELS</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* ... */</font>

    <font color="#2040a0">mci</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">edac_check</font> <font color="4444FF">=</font> <font color="#2040a0">i855_check</font><font color="4444FF">;</font> <font color="#444444">/* Supply the check method to the
                                     EDAC core */</font>
    <font color="#444444">/* Do other memory controller initializations */</font>

    <font color="#444444">/* ... */</font>

    <font color="#444444">/* Register this memory controller with the EDAC core */</font>
    <font color="#2040a0">edac_mc_add_mc</font><font color="4444FF">(</font><font color="#2040a0">mci</font>, <font color="#FF0000">0</font><font color="4444FF">)</font><font color="4444FF">;</font>
    <font color="#444444">/* ... */</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Remove method */</font>
<strong>static</strong> <strong>void</strong> <font color="#2040a0">__devexit</font>
<font color="#2040a0">i855_remove</font><font color="4444FF">(</font><strong>struct</strong> <font color="#2040a0">pci_dev</font> <font color="4444FF">*</font><font color="#2040a0">pdev</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <strong>struct</strong> <font color="#2040a0">mem_ctl_info</font> <font color="4444FF">*</font><font color="#2040a0">mci</font> <font color="4444FF">=</font> <font color="#2040a0">edac_mc_find_mci_by_pdev</font><font color="4444FF">(</font><font color="#2040a0">pdev</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <strong>if</strong> <font color="4444FF">(</font><font color="#2040a0">mci</font> <font color="4444FF">&amp;</font><font color="4444FF">&amp;</font> <font color="4444FF">!</font><font color="#2040a0">edac_mc_del_mc</font><font color="4444FF">(</font><font color="#2040a0">mci</font><font color="4444FF">)</font><font color="4444FF">)</font> <font color="4444FF"><strong>{</strong></font>
        <font color="#2040a0">edac_mc_free</font><font color="4444FF">(</font><font color="#2040a0">mci</font><font color="4444FF">)</font><font color="4444FF">;</font> <font color="#444444">/* Free memory for this controller. Reverse
                              of edac_mc_alloc() */</font>
    <font color="4444FF"><strong>}</strong></font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* PCI Device ID Table */</font>
<strong>static</strong> <strong>const</strong> <strong>struct</strong> <font color="#2040a0">pci_device_id</font> <font color="#2040a0">i855_pci_tbl</font><font color="4444FF">[</font><font color="4444FF">]</font> <font color="#2040a0">__devinitdata</font> <font color="4444FF">=</font> <font color="4444FF"><strong>{</strong></font>
    <font color="4444FF"><strong>{</strong></font><font color="#2040a0">PCI_VEND_DEV</font><font color="4444FF">(</font><font color="#2040a0">INTEL</font>, <font color="#2040a0">I855_PCI_DEVICE_ID</font><font color="4444FF">)</font>,
     <font color="#2040a0">PCI_ANY_ID</font>, <font color="#2040a0">PCI_ANY_ID</font>, <font color="#FF0000">0</font>, <font color="#FF0000">0</font>,<font color="4444FF"><strong>}</strong></font>,
    <font color="4444FF"><strong>{</strong></font><font color="#FF0000">0</font>,<font color="4444FF"><strong>}</strong></font>,
<font color="4444FF"><strong>}</strong></font><font color="4444FF">;</font>

<font color="#2040a0">MODULE_DEVICE_TABLE</font><font color="4444FF">(</font><font color="#2040a0">pci</font>, <font color="#2040a0">i855_pci_tbl</font><font color="4444FF">)</font><font color="4444FF">;</font>
<font color="#444444">/* pci_driver structure for this device.
   Re-visit Chapter 10 for a detailed explanation */</font>
<strong>static</strong> <strong>struct</strong> <font color="#2040a0">pci_driver</font> <font color="#2040a0">i855_driver</font> <font color="4444FF">=</font> <font color="4444FF"><strong>{</strong></font>
    .<font color="#2040a0">name</font>     <font color="4444FF">=</font> <font color="#008000">&quot;855&quot;</font>,
    .<font color="#2040a0">probe</font>    <font color="4444FF">=</font> <font color="#2040a0">i855_probe</font>,
    .<font color="#2040a0">remove</font>   <font color="4444FF">=</font> <font color="#2040a0">__devexit_p</font><font color="4444FF">(</font><font color="#2040a0">i855_remove</font><font color="4444FF">)</font>,
    .<font color="#2040a0">id_table</font> <font color="4444FF">=</font> <font color="#2040a0">i855_pci_tbl</font>,
<font color="4444FF"><strong>}</strong></font><font color="4444FF">;</font>

<font color="#444444">/* Driver Initialization */</font>
<strong>static</strong> <strong>int</strong> <font color="#2040a0">__init</font>
<font color="#2040a0">i855_init</font><font color="4444FF">(</font><strong>void</strong><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
    <font color="#444444">/* ... */</font>
    
    <font color="#2040a0">pci_rc</font> <font color="4444FF">=</font> <font color="#2040a0">pci_register_driver</font><font color="4444FF">(</font><font color="4444FF">&amp;</font><font color="#2040a0">i855_driver</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="#444444">/* ... */</font>
<font color="4444FF"><strong>}</strong></font>

</pre>
<hr>
syntax highlighted by <a href="http://www.palfrader.org/code2html">Code2HTML</a>, v. 0.9.1
</body>
</html>
