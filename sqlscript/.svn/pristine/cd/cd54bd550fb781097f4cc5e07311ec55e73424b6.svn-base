http://www.iteye.com/topic/720373
mysql编程技巧 编程和数据库管理篇 机械工业出版社 
启动：net start mysql 
中止:net stop mysql 
修改密码：$MySQL_HOME>bin>mysqladmin -u root -p password new_password(设置新密码为new_password,回车后输入旧密码) 
还可以，但是有错误mysql> set password for root=password("why810707"); 
ERROR 1133 (42000): Can't find any matching row in the user table 
建立数据库：create database mydata; 
删除数据库：drop database mydata; 
显示数据库：show databases; 
打开一个数据库：use mydata; 
显示一个数据库中的所有表：show tables; 
建立数据表：create table data(id int(6),name varchar(20)); 
插入一条数据insert into table_name values ( , ' ', , , ); 
从文本文件导入数据mysqlimport -u root -p mydata data.txt 
删除数据表：drop table data; 
查询数据表：select * from table_name; 
导出数据：mysqladmin creat target_db_name 
  mysql target_db_name<backup-file.sql 
extended-status显示服务器状态变量的名字和值 
flush-hosts刷新主机高速缓存 
flush-logs刷新日志文件 
flush-privileges重新加载授权表 
flush-status清楚状态变量 
flush-tables刷新表的高速缓存 
version 检索并显示服务器信息 
status:显示服务器简短的状态信息 
shutdown:指示服务器关闭 
reload：重新加载授权表 
refresh：刷新表的告诉缓存并关闭和重新打开日志文件 
kill id…… 
password new_password设置新密码 
ping检查mysql服务器是否在运行 
\c取消当前查询 

------------------------------------------------------------------------------- 

(1)数据记录筛选： 
sql="select * from 数据表 where 字段名=字段值 orderby 字段名 [desc] " 
sql="select * from 数据表 where 字段名 like '%字段值%' orderby 字段名 [desc]" 
sql="select   top10 * from 数据表 where 字段名 orderby 字段名[desc]" 
sql="select * from 数据表 where 字段名 in('值1','值2','值3')" 
sql="select * from 数据表 where 字段名 between 值1 and 值 2" 
Sql = "Select Distinct 字段名 From 数据表" 
Distinct函数，查询数据库存表内不重复的记录 
Sql = "Select Count(*) From 数据表 where 字段名1>#18:0:0# and 字段名1< #19:00# " 
count函数,查询数库表内有多少条记录，“字段名1”是指同一字段 
Sql="select * from 数据表 where 字段名=字段值 order by 字段名 [desc]" 

Sql="select * from 数据表 where 字段名 like '%字段值%' order by 字段名 [desc]" 
模糊查询 %：代表任意长的一段字符   _ ：代表一个字符 

Sql="select top 10 * from 数据表 where 字段名 order by 字段名 [desc]" 
查找数据库中前10记录 

Sql="select top n * form 数据表 order by newid()" 
随机取出数据库中的若干条记录的方法 
top n，n就是要取出的记录数 

Sql="select * from 数据表 where 字段名 in ('值1','值2','值3')" 
(2)更新数据记录： 
sql="update 数据表 set 字段名=字段值 where 条件表达式" 
sql="update 数据表 set 字段1=值1,字段2=值2……字段n=值n where 条件表达式" 
Sql="update 数据表 set 字段1=值1,字段2=值2 …… 字段n=值n " 
没有条件则更新整个数据表中的指定字段值 

(3)删除数据记录： 
sql="delete from 数据表 where 条件表达式" 
sql="delete from 数据表 " 
(将数据表所有记录删除) 
(4)添加数据记录： 
sql="insert into 数据表(字段1,字段2,字段3…) values(值1,值2,值3…)" 
sql="insert into 数据表 valuess (值1,值2,值3 …)" 
不指定具体字段名表示将按照数据表中字段的顺序，依次添加 

sql="insert into 目标数据表 select * from 源数据表"(把源数据表的记录添加到目标数据表) 
(5)数据记录统计函数： 
AVG(字段名)得出一个表格栏平均值 
COUNT(*|字段名)对数据行数的统计或对某一栏有值的数据行数统计 
MAX(字段名)取得一个表格栏最大的值 
MIN(字段名)取得一个表格栏最小的值 
SUM(字段名)把数据栏的值相加 
引用以上函数的方法： 
sql="selectsum(字段名)as别名from数据表where条件表达式" 
setrs=conn.excute(sql) 
用rs("别名")获取统的计值，其它函数运用同上。 
(5)数据表的建立和删除： 
CREATETABLE数据表名称(字段1类型1(长度),字段2类型2(长度)……) 
例：CREATETABLEtab01 (namevarchar (50), datetimedefaultnow ()) 
DROPTABLE数据表名称(永久性删除一个数据表) 
4.记录集对象的方法： 
rs.movenext将记录指针从当前的位置向下移一行 
rs.moveprevious将记录指针从当前的位置向上移一行 
rs.movefirst将记录指针移到数据表第一行 
rs.movelast将记录指针移到数据表最后一行 
rs.absoluteposition=N将记录指针移到数据表第N行 
rs.absolutepage=N将记录指针移到第N页的第一行 
rs.pagesize=N设置每页为N条记录 
rs.pagecount根据pagesize的设置返回总页数 
rs.recordcount返回记录总数 
rs.bof返回记录指针是否超出数据表首端，true表示是，false为否 
rs.eof返回记录指针是否超出数据表末端，true表示是，false为否 
rs.delete删除当前记录，但记录指针不会向下移动 
rs.addnew添加记录到数据表末端 
rs.update更新数据表记录 

---------------------------------------------------------------------- 

jsp中连接mysql 
（1）加载驱动程序 
Class.forName("sun.jdbc.odbc.JdbcOdbcDriver"); 
Class.forName("jdbc.DriverXYZ"); 
(2)建立连接 
String Url="jdbc:odbc:Fred"; 
Connection con=DriverManager.getConnection(Url,"myLogin","myPassword"); 
(3)执行sql语句 
executeQuery()用于执行单个结果集的语句 
executeUpdate()用于执行insert、update、delete之类的non-select语句

--
-- Mysql Get current date and time
--
mysql> select?? now();
+---------------------+
| now()?????? |
+---------------------+
| 2011-06-11 12:00:54 |
+---------------------+
1 row in set (0.00 sec)
?
?
mysql> select?? sysdate();
+---------------------+
| sysdate()?? |
+---------------------+
| 2011-06-11 12:00:54 |
+---------------------+
1 row in set (0.00 sec)
?
?
mysql> select?? curdate();
+------------+
| curdate()? |
+------------+
| 2011-06-11 |
+------------+
1 row in set (0.00 sec)
?
?
mysql>? select?? current_date;
+--------------+
| current_date |
+--------------+
| 2011-06-11?? |
+--------------+
1 row in set (0.00 sec)
?
?
mysql>? select?? curtime();
+-----------+
| curtime() |
+-----------+
| 12:00:54? |
+-----------+
1 row in set (0.00 sec)
?
?
?
mysql> select?? current_time;
+--------------+
| current_time |
+--------------+
| 12:00:54???? |
+--------------+
1 row in set (0.00 sec)
?
2. mysql （unix 时间戳、日期）转换函数：
unix_timestamp(), 
unix_timestamp(date), 
from_unixtime(unix_timestamp), 
from_unixtime(unix_timestamp,format)
下面是示例：
select unix_timestamp(); -- 1218290027 ===得到当前时间的unix时间值

将具体时间来转换成timestamp
select unix_timestamp('2008-08-08'); -- 1218124800 
select unix_timestamp('2008-08-08 12:30:00'); -- 1218169800

将timestamp来转换成具体时间 
select from_unixtime(1218290027); -- '2008-08-09 21:53:47' 
select from_unixtime(1218124800); -- '2008-08-08 00:00:00' 
select from_unixtime(1218169800); -- '2008-08-08 12:30:00'
select from_unixtime(1218169800, '%y %d %m %h:%i:%s %x'); -- '2008 8th august 12:30:00 2008'
?

From：http://tompig.iteye.com/blog/1076067